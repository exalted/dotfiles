# ------------------------------------------------------------------------------
# Default Development Directory
# ------------------------------------------------------------------------------
export DEVELOPMENT_DIR=$HOME/Development

# ------------------------------------------------------------------------------
# Private bins
# ------------------------------------------------------------------------------
export PATH=$HOME/bin:$PATH

# ------------------------------------------------------------------------------
# Homebrew
# ------------------------------------------------------------------------------
homebrew=/usr/local/bin:/usr/local/sbin
export PATH=$homebrew:$PATH
unset homebrew

# ------------------------------------------------------------------------------
# Include npm-installed binaries
# ------------------------------------------------------------------------------
export PATH=$PATH:/usr/local/share/npm/bin

# ------------------------------------------------------------------------------
# Better Bash
# ------------------------------------------------------------------------------
export HISTSIZE=100000
# (Ref.: http://askubuntu.com/a/15929)
export HISTCONTROL=ignoreboth:erasedups
# # (Ref.: http://www.talug.org/events/20030709/cmdline_history.html)
# export HISTIGNORE="&:ls:[bf]g:exit"

# Append when the shell exits, rather than overwriting the history file
shopt -s histappend

# Don't tab-complete if prompt is empty
shopt -s no_empty_cmd_completion

# Correct minor errors in the spelling of a directory component in a cd command
shopt -s cdspell

# History completion to what's already on the line
# (Ref.: http://stackoverflow.com/a/1030206/11895)
bind '"\e[A": history-search-backward'
bind '"\e[B": history-search-forward'

# ------------------------------------------------------------------------------
# See "brew info bash-completion"
# ------------------------------------------------------------------------------
if [ -f $(brew --prefix)/etc/bash_completion ]; then
    . $(brew --prefix)/etc/bash_completion
fi

# ------------------------------------------------------------------------------
# Go
# ------------------------------------------------------------------------------
# (Ref.: http://golang.org/doc/code.html#GOPATH)
export GOPATH=$HOME/.go
export PATH=$PATH:$GOPATH/bin

# ------------------------------------------------------------------------------
# Pimp my prompt
# ------------------------------------------------------------------------------
function __ps1_newline_login {
    if [[ -n "${PS1_NEWLINE_LOGIN:-}" ]]; then
        echo
    else
        PS1_NEWLINE_LOGIN=true
    fi
}

PROMPT_COMMAND="history -a;${PROMPT_COMMAND}__ps1_newline_login;"

export GIT_PS1_SHOWDIRTYSTATE=true `# show unstaged (*) and staged (+) changes`

# export PS1="\h:\W \u\$ "
export PS1="\[\e[32m\]âžœ  \[\e[34m\]\W:\[\e[31m\]\$(__git_ps1 \" (%s)\")\[\e[0m\]  "

# ------------------------------------------------------------------------------
# Terminal colors
# (Ref.: http://noiseandheat.com/blog/2011/12/os-x-lion-terminal-colours/)
# ------------------------------------------------------------------------------
#
# Tell ls to be colourful
export CLICOLOR=1
export LS_COLORS="di=34;40:ln=35;40:so=32;40:pi=33;40:ex=31;40:bd=34;46:cd=34;43:su=0;41:sg=0;46:tw=0;42:ow=0;43:"

# Tell grep to highlight matches
export GREP_OPTIONS='--color=auto'

source "`brew --prefix`/etc/grc.bashrc"

# ------------------------------------------------------------------------------
# Pager
# ------------------------------------------------------------------------------
# export PAGER=less
# export LESS='--quit-if-one-screen --raw-control-chars --chop-long-lines --no-init --IGNORE-CASE'
export PAGER=least

# ------------------------------------------------------------------------------
# rbenv
# ------------------------------------------------------------------------------
if which rbenv > /dev/null; then eval "$(rbenv init -)"; fi

# ------------------------------------------------------------------------------
# Heroku
# ------------------------------------------------------------------------------

# !!! It is important that this section comes _after_ `rbenv` initialization,
# because (if `heroku` gem is installed in an environment) shimmed version of
# `heroku` would take precedence otherwise.

### Added by the Heroku Toolbelt
export PATH=/usr/local/heroku/bin:$PATH

# ------------------------------------------------------------------------------
# Preferred editors
# ------------------------------------------------------------------------------
#
# super-old line editor, who cares nowadays?!
# export EDITOR=

# new (old) editor that is better than a line editor
export VISUAL='emacs'

# `INTEGRATED` (as in "I" in IDE) is not standard, but I like the idea
export INTEGRATED='atom'

# ------------------------------------------------------------------------------
# Disabling tilde expansion
# (Ref.: http://superuser.com/a/95655/45837)
# ------------------------------------------------------------------------------
__expand_tilde_by_ref(){ true; }
_expand(){ true; }

# ------------------------------------------------------------------------------
# Common typos
# ------------------------------------------------------------------------------
alias cd..='cd ..'

# ------------------------------------------------------------------------------
# Alias hub to git
# (Ref.: https://github.com/defunkt/hub#aliasing)
# ------------------------------------------------------------------------------
eval "$(hub alias -s)"

# ------------------------------------------------------------------------------
# Better Git
# ------------------------------------------------------------------------------

# function __git_stash_wrap {
#     SHA=$(git rev-list --max-count=1 HEAD) &&
#     touch $SHA &&
#     git stash --keep-index --include-untracked &> /dev/null &&
#     eval '$@' &&
#     git stash pop --index &> /dev/null &&
#     rm -f $SHA
# }

# ------------------------------------------------------------------------------
# Better man
# ------------------------------------------------------------------------------
# (Ref.: http://unix.stackexchange.com/a/18088)
function __man {
    case "$(type -t "$1"):$1" in
        builtin:* )
            # built-in
            help "$1" | "${PAGER:-less}"
            ;;

        *[[?*]*)
            # pattern
            help "$1" | "${PAGER:-less}"
            ;;

        *)
            # something else, presumed to be an external command
            # or options for the man command or a section number
            command -p man "$@"
            ;;
    esac
}

# ------------------------------------------------------------------------------
# HTTPie with colorized and paged output
# (Ref.: https://github.com/jkbr/httpie#redirected-output)
# ------------------------------------------------------------------------------
alias http='http --pretty=all "$@"'

# ------------------------------------------------------------------------------
# Generate random passwords as by KION SpA specs
# ------------------------------------------------------------------------------
alias kionpw='pwgen -cnyB 10 1'

# ------------------------------------------------------------------------------
# Fake commands
# ------------------------------------------------------------------------------
alias spider='wget --force-directories --recursive --no-parent --no-clobber --convert-links --adjust-extension'

alias diskusage='du -sh'

function google {
    local search=""
    for term in "$@"; do
        if [[ -z "${search:-}" ]]; then
            search="$term"
        else
            search="$search%20$term"
        fi
    done
    if [[ -z "${search:-}" ]]; then
        echo 'Usage: google something' >&2
        return 1
    else
        open "https://www.google.com/?gws_rd=ssl#safe=off&q=$search";
    fi
}

function browse {
    # TODO: check if `$@` is already prepended with `http://`
    open "http://$@"
}

function chrome {
    # TODO: check if `$@` is already prepended with `http://`
    open "http://$@" -a /Applications/Google\ Chrome.app/
}

function serve {
    python -m SimpleHTTPServer "${1:-8080}"
}

alias reset-open-with='/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Support/lsregister -kill -r -domain local -domain system -domain user'
